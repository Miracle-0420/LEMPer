## FastCGI Cache Rules.
# Designed to be included in any server {} block.

## Default FastCGI Cache Rules.
# Ref: http://rtcamp.com/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/
# Ref: https://gist.github.com/magnetikonline/10450786

set $skip_cache 0;

# POST requests and urls with a query string should always go to PHP.
if ($request_method = POST) {
	set $skip_cache 1;
}

if ($query_string != "") {
	set $skip_cache 1;
}

if ($http_x_custom_header) {
	set $skip_cache 0;
}

# Skip cache on admin pages
if ($request_uri ~* "(/account/*|/admin/*|/backend/*|/dashboard/*)") {
    set $skip_cache 1;
}

# Skip cache for uris containing the following segments.
if ($request_uri ~* "(apc.php|(mem|op)cache.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
	set $skip_cache 1;
}

# Skip cache for logged in cookies, you can customize this rule according to your cookie setting.
if ($http_cookie ~ "users_login_cookie") {
	set $skip_cache 1;
}

# DO NOT CACHE Search Engine Bot crawler
if ($http_user_agent ~ "\b(Googlebot|Yahoo|bingbot|MSNBot|YandexBot|Baiduspider|Alexabot|AhrefsBot)\b") {
	set $skip_cache 1;
}


## WordPress Cache Rules.

# Skip cache for uris containing the following segments
if ($request_uri ~* "(/wp-admin|/xmlrpc.php|wp-*.php|/feed/|index.php|upgrade.php|update-core.php|memcache.php|apc.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
	set $skip_cache 1;
}

# Skip cache for logged in users or recent commenters
if ($http_cookie ~* "(comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in)") {
	set $skip_cache 1;
}

# Skip cache on WooCommerce pages
if ($request_uri ~* "(/addons.*|/basket.*|/cart.*|/checkout.*|/my-account.*|/shop.*)") {
	set $skip_cache 1;
}

# Skip cache for WooCommerce query string
if ($arg_add-to-cart != "") {
    set $skip_cache 1;
}

# Skip cache when WooCommerce cart is not empty
if ($cookie_woocommerce_items_in_cart = "1") {
	set $skip_cache 1;
}


## Purging FastCGI cache.
location ~ /purge(/.*) {
    access_log off;
    fastcgi_cache_purge FASTCGICACHE "$scheme$request_method$host$request_uri";
    return 301 $scheme://$server_name;
    allow 127.0.0.1;
    deny all;
}

## End FastCGI Cache Rules.
